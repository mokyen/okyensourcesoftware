<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"> <channel><title>Okyen Source Software Blog</title><description>Stay updated with the latest blog posts</description><link>https://www.okyensourcesoftware.com/</link><atom:link href="https://www.okyensourcesoftware.com/feed_rss_created.xml" rel="self" type="application/rss+xml" /><language>en</language> <pubDate>Tue, 22 Apr 2025 16:21:42 -0000</pubDate> <lastBuildDate>Tue, 22 Apr 2025 16:21:42 -0000</lastBuildDate> <ttl>1440</ttl> <generator>MkDocs RSS plugin - v1.17.1</generator> <image> <url>None</url> <title>Okyen Source Software Blog</title><link>https://www.okyensourcesoftware.com/</link> </image> <item> <title>C++Now: What to Know Before You Go</title> <author>mokyen</author> <description>&lt;h1&gt;C++Now: What to Know Before You Go&lt;/h1&gt;&lt;p&gt;I am so excited that C++Now is just around the corner! Unfortunately, I won&#39;t be able to attend this year, but I wanted to share some insights from my previous experience to help first-timers and returning attendees prepare for this fantastic event. Here are my top 14 tips to make your C++Now experience even better:&lt;/p&gt;&lt;h2&gt;ðŸ¥¾ Pack boots or good walking shoes for grass&lt;/h2&gt;&lt;p&gt;Bring comfortable walking shoes that can handle going through grass. The walk from the hotels to the conference rooms takes about 10 minutes. There&#39;s a shortcut between conference venues that cuts through a field, so having shoes that can handle varied terrain is key, especially since the weather can be unpredictable. We even had snow last year!&lt;/p&gt;</description><link>https://www.okyensourcesoftware.com/blog/cnow-what-to-know-before-you-go/</link> <pubDate>Tue, 22 Apr 2025 00:00:00 +0000</pubDate><source url="https://www.okyensourcesoftware.com/feed_rss_created.xml">Okyen Source Software Blog</source><guid isPermaLink="true">https://www.okyensourcesoftware.com/blog/cnow-what-to-know-before-you-go/</guid> </item> <item> <title>Debugging Like House - Software Differential Diagnosis</title> <author>mokyen</author> <description>&lt;h1&gt;Debugging Like House - Software Differential Diagnosis&lt;/h1&gt;&lt;p&gt;At C++ now 2024, I had the pleasure of giving my first lightning talk. Although I presented this as...&lt;/p&gt;</description><link>https://www.okyensourcesoftware.com/blog/debugging-like-house---software-differential-diagnosis/</link> <pubDate>Fri, 17 Jan 2025 00:00:00 +0000</pubDate><source url="https://www.okyensourcesoftware.com/feed_rss_created.xml">Okyen Source Software Blog</source><guid isPermaLink="true">https://www.okyensourcesoftware.com/blog/debugging-like-house---software-differential-diagnosis/</guid> </item> <item> <title>Using Gtest with CMake in Godbolt</title> <author>mokyen</author> <description>&lt;h1&gt;Using Gtest with CMake in Godbolt&lt;/h1&gt;&lt;h2&gt;TL;DR&lt;/h2&gt;&lt;p&gt;Learn how to set up Google Test (Gtest) with CMake in Compiler Explorer (Godbolt) for efficient C++ unit testing in a multi-file project environment. This approach streamlines the development process, especially for personal projects or when you need a quick, sharable testing setup.&lt;/p&gt;&lt;h2&gt;Introduction&lt;/h2&gt;&lt;p&gt;Compiler Explorer (CE), also known as godbolt.org, has been a game-changer for many software engineers, myself included. Over the past four years, it has significantly impacted my development process. This tool&#39;s influence extends beyond individual developers; even tech giants like Google incorporate CE &lt;a href=&#34;https://www.youtube.com/watch?v=torqlZnu9Ag&#34;&gt;into their official processes&lt;/a&gt;. The C++ community (and many others) owes a debt of gratitude to &lt;a href=&#34;https://xania.org/&#34;&gt;Matt Godbolt&lt;/a&gt; for creating this invaluable resource.&lt;/p&gt;&lt;p&gt;One of CE&#39;s most powerful applications is in learning how to perform Test Driven Development (TDD). Previously, setting up a TDD environment could take hours. With CE and some guidance from &lt;a href=&#34;https://blog.feabhas.com/2020/08/tdd-with-compiler-explorer/&#34;&gt;Niall Cooling&#39;s blog&lt;/a&gt;, I was able to start unit testing in under two minutes. This accessibility extends to various devices, from desktops to tablets, and even smartphones (though mobile usage has its limitations).&lt;/p&gt;&lt;p&gt;While CE&#39;s Gtest integration works seamlessly for single-file projects, things get more complex when you need to separate source code and unit tests. This blog post will guide you through setting up Gtest with CMake in Compiler Explorer for multi-file projects, sharing insights from my experience and offering solutions to common challenges.&lt;/p&gt;</description><link>https://www.okyensourcesoftware.com/blog/using-gtest-with-cmake-in-godbolt/</link> <pubDate>Wed, 18 Sep 2024 00:00:00 +0000</pubDate><source url="https://www.okyensourcesoftware.com/feed_rss_created.xml">Okyen Source Software Blog</source><guid isPermaLink="true">https://www.okyensourcesoftware.com/blog/using-gtest-with-cmake-in-godbolt/</guid> </item> <item> <title>Decision-Making Isolation (DMI)</title> <author>mokyen</author> <description>&lt;h1&gt;Decision-Making Isolation (DMI)&lt;/h1&gt;&lt;p&gt;Decision-Making Isolation is a design philosophy that emphasizes separating the decision-making in code from the IO (gathe...&lt;/p&gt;</description><link>https://www.okyensourcesoftware.com/blog/decision-making-isolation-dmi/</link> <pubDate>Sun, 16 Jun 2024 00:00:00 +0000</pubDate><source url="https://www.okyensourcesoftware.com/feed_rss_created.xml">Okyen Source Software Blog</source><guid isPermaLink="true">https://www.okyensourcesoftware.com/blog/decision-making-isolation-dmi/</guid> </item> <item> <title>What is Invariance?</title> <author>mokyen</author> <description>&lt;h1&gt;What is Invariance?&lt;/h1&gt;&lt;p&gt;The term &#39;invariant&#39; is one of the linchpins of Decision Making Isolation. It is used in the &lt;a href=&#34;https://isocpp.github.io/CppCoreGuidelines&#34;&gt;Cpp Core Guidelines&lt;/a&gt; as the reason to use a class versus struct. But what does it really mean?&lt;/p&gt;&lt;h2&gt;Struct vs Class&lt;/h2&gt;&lt;p&gt;Before we discuss invariance, let&#39;s take a look at what else the &lt;a href=&#34;https://isocpp.github.io/CppCoreGuidelines&#34;&gt;Cpp Core Guidelines&lt;/a&gt; say about the difference between a class and struct.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;http://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#c8-use-class-rather-than-struct-if-any-member-is-non-public&#34;&gt;C.8&lt;/a&gt;: Use &lt;code&gt;class&lt;/code&gt; rather than &lt;code&gt;struct&lt;/code&gt; if any member is non-publicReason: Readability. To make it clear that something is being hidden/abstracted. This is a useful &lt;em&gt;convention&lt;/em&gt;.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;While &lt;code&gt;class&lt;/code&gt; and &lt;code&gt;struct&lt;/code&gt; are relatively equivalent in C++, the Guidelines set the &lt;em&gt;convention&lt;/em&gt; that structs are intended to only contain public members. Because all public data members can be directly modified, I believe it can be inferred that structs also shouldn&#39;t have public member functions. In the forthcoming &lt;a href=&#34;dmi.md&#34;&gt;Decision Making Isolation (DMI) blog&lt;/a&gt;, we&#39;ll go more into the preference for free functions. For now, we&#39;ll assume that structs only have public data members and no functions.&lt;/p&gt;</description><link>https://www.okyensourcesoftware.com/blog/what-is-invariance/</link> <pubDate>Sun, 16 Jun 2024 00:00:00 +0000</pubDate><source url="https://www.okyensourcesoftware.com/feed_rss_created.xml">Okyen Source Software Blog</source><guid isPermaLink="true">https://www.okyensourcesoftware.com/blog/what-is-invariance/</guid> </item> </channel></rss>